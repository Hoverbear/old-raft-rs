[package]
name = "raft"
version = "0.0.1"
authors = [
    "Andrew Hobden <andrew@hoverbear.org>",
    "Dan Burkert <dan@danburkert.com>",
    "James McGlashan <github@darkfox.id.au>",
]
description = """
Today our systems operate in extreme conditions, functioning across containers,
virtual machines, infrastructure, networks, embedded systems, in our pockets,
and even inside of us. Many of these systems depend on one another for
operation, others are able to operate in failing connectivity without disaster.
In many cases it is preferable to have the latter, especially if the operation
the continued operation of the system is at stake. Distributed consensus
represents one small part of a larger system, and offer the ability to maintain
a replicated persistent log containing actions that are applied globally into
a state machine. This allows *n* clients to communicate to a cluster of *m*
servers in a stable and predictable manner, even in failing network conditions.

Using Ongaro and Osterhouts's Raft algorithm we are developing a fast, low
level, low requirements implementation of the system in an unopinionated,
minimal way. The Raft library interfaces with custom or preexisting Log and
State Machine implementations, providing a Client, Server, and Consensus Module
within its core. We have chosen an asynchronous single threaded event loop model
in the Rust language, allowing our implementation to have strong safety and
performance characteristics with low demands. Communication, a primary
performance concern, is kept as lightweight and fast as possible by using
Renshaw's Cap'n Proto implementation. We are currently exploring opportunities
in trust and security as well as testing our implementation for further failure
conditions."""
readme = "README.md"
keywords = [
    "Raft", "Distributed Computing", "Consensus", "State Machine",
    "Persistent Log", "Networking",
]
license = "MIT"

# Builds Cap'n Proto messages
build = "build.rs"

# Dependencies
[build-dependencies.capnpc]
git = "https://github.com/dwrensha/capnpc-rust"

[dependencies]
bufstream = "*"
log = "*"
mio = "*"
rand = "*"
scoped_log = "*"
uuid = "*"
wrapped_enum = "*"

[dependencies.capnp]
git = "https://github.com/danburkert/capnproto-rust"
branch = "async"

[dev-dependencies]
env_logger = "*"
# Used in Examples
docopt = "*"
serde = "*"
serde_macros = "*"
rustc-serialize = "*"
